# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

keymap = [
	{ on = "<Esc>", run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
	# { on = "<C-[>", run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = "q",     run = "quit",               desc = "Exit the process" },
	{ on = "Q",     run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file" },
	{ on = "<C-c>", run = "close",              desc = "Close the current tab, or quit if it is last tab" },
	{ on = "<C-z>", run = "suspend",            desc = "Suspend the process" },

	# Navigation
	# { on = "k", run = "arrow -1", desc = "Move cursor up" },
	# { on = "j", run = "arrow 1",  desc = "Move cursor down" },

	# { on = "K", run = "arrow -5", desc = "Move cursor up 5 lines" },
	# { on = "J", run = "arrow 5",  desc = "Move cursor down 5 lines" },

	{ on = "<S-Up>",   run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = "<S-Down>", run = "arrow 5",  desc = "Move cursor down 5 lines" },

	# { on = "<C-u>", run = "arrow -50%",  desc = "Move cursor up half page" },
	# { on = "<C-d>", run = "arrow 50%",   desc = "Move cursor down half page" },
	# { on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },
	# { on = "<C-f>", run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = "<C-PageUp>",   run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<C-PageDown>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<PageUp>",     run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<PageDown>",   run = "arrow 100%",  desc = "Move cursor down one page" },

	# { on = "h", run = "leave", desc = "Go back to the parent directory" },
	# { on = "l", run = "enter", desc = "Enter the child directory" },

	{ on = "√∂", run = "back",    desc = "Go back to the previous directory" },
	{ on = "√§", run = "forward", desc = "Go forward to the next directory" },

	{ on = "n",        run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "m",        run = "seek 5",  desc = "Seek down 5 units in the preview" },
	# { on = "<A-PageUp>",   run = "seek -5", desc = "Seek up 5 units in the preview" },
	# { on = "<A-PageDown>", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	{ on = "<Up>",    run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>",  run = "arrow 1",  desc = "Move cursor down" },
	{ on = "<Left>",  run = "leave",    desc = "Go back to the parent directory" },
	{ on = "<Right>", run = "enter",    desc = "Enter the child directory" },

	# { on = [ "g", "g" ], run = "arrow -99999999", desc = "Move cursor to the top" },
	# { on = "G",          run = "arrow 99999999",  desc = "Move cursor to the bottom" },

	# Selection
	{ on = "<Space>", run = [ "toggle --state=none", "arrow 1" ], desc = "Toggle the current selection state" },
	{ on = "v",       run = "visual_mode",                        desc = "Enter visual mode (selection mode)" },
	{ on = "V",       run = "visual_mode --unset",                desc = "Enter visual mode (unset mode)" },
	{ on = "s",   run = "toggle_all --state=true",            desc = "Select all files" },
	{ on = "S",   run = "toggle_all --state=none",            desc = "Inverse selection of all files" },

	# Operation
	# { on = [ "k","k" ], run = "shell 'open \"$@\" &' --", desc = "Open selected files in the background"	},	
	{ on = "<Enter>",   run = "open", block = false,                 desc = "Open selected files" },
	{ on = "<S-Enter>", run = "open --interactive",          desc = "Open selected files interactively" },
	{ on = [ "y","c" ],         run = "plugin copy-file-contents",                        desc = "Copy contents of files" },
	{ on = [ "y","y" ],         run = "yank",                        desc = "Copy selected files" },
	{ on = [ "y","x" ],         run = "yank --cut",                  desc = "Cut the selected files" },
	{ on = [ "y","u" ],         run = "unyank",                      desc = "Cancel the yank status" },
	{ on = [ "p","p" ],         run = "paste",                       desc = "Paste yanked files" },
	{ on = [ "p","P" ],         run = "paste --force",               desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = [ "p","l" ],         run = "link",                        desc = "Symlink the absolute path of yanked files" },
	{ on = [ "p","L" ],         run = "link --relative",             desc = "Symlink the relative path of yanked files" },
	# { on = [ "p","h" ],         run = "shell ln {yanked} .",desc = "hardlink" },

	{ on = "<Delete>",  run = "remove",                      desc = "Trash selected files" },
	{ on = "<backspace>",  run = "remove",                      desc = "Trash selected files" },
	{ on = "<S-Delete>",         run = "remove --permanently",        desc = "PERMANENTLY delete selected files" },
	{ on = "<S-backspace>",         run = "remove --permanently",        desc = "PERMANENTLY delete selected files" },
	{ on = ";",         run = "shell --interactive",         desc = "Run a shell command" },
	{ on = ":",         run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },
	{ on = ".",         run = "hidden toggle",               desc = "Toggle the visibility of hidden files" },

	# Find
	{ on = [ "f","f" ], run = "find --smart",            desc = "Find next file" },
	{ on = [ "f","d" ],         run = "search fd",                   desc = "Find files by name using fd" },
	{ on = [ "f","r" ],         run = "search rg",                   desc = "Find files by content using ripgrep" },
	{ on = "<C-s>",     run = "search none",                 desc = "Cancel the ongoing search" },
	{ on = [ "f","o" ], run = "plugin zoxide",               desc = "Jump to a directory using zoxide" },
	{ on = [ "f","z" ],   run = "plugin fzf",    desc = "Jump to a directory or reveal a file using fzf" },
	{ on = [ "f", "y" ], run = "shell --block -- 'c=$(fzf --preview \"bat --color=always --style=plain --line-range=:500 {}\") && [ -n \"$c\" ] && ya emit cd \"$(dirname \"$c\")\" && ya emit select \"$(basename \"$c\")\"'", desc = "üîç FZF select + jump" },

	# { on = "?", run = "find --previous --smart", desc = "Find previous file" },
	# { on = "n", run = "find_arrow",              desc = "Go to the next found" },
	# { on = "N", run = "find_arrow --previous",   desc = "Go to the previous found" },

    { on = [ "k","a","a" ], run = "shell '$HOME/.config/yazi/scripts/tar_selected.sh \"$@\"' --block", desc = "üì¶ Archive Files" },
    { on = [ "k","a","u" ], run = "shell '$HOME/.config/yazi/scripts/untar_selected.sh \"$@\"' --block", desc = "üéä Uncompress" },
	{ on   = [ "k", "b" ], run  = "shell '$HOME/.config/yazi/scripts/broot.sh \"$1\"' --block", desc = "üå¥ broot dir" },
	{ on = [ "k", "c" ], run  = "plugin chmod", desc = "‚úçÔ∏è Chmod on selected files" },
	{ on = [ "k", "d" ], run = "plugin diff", desc= "üîÉ Diff the selected with the hovered file"},
	{ on = [ "k", "f" ], run = "shell 'open -R \"$@\"'", desc= "Open in üçé macos finder"},
    # { on = [ "k", "g", "c" ], run = "shell '$HOME/.config/yazi/scripts/gpg_encrypt_selected.sh \"$@\"' --block", desc = "üîê Crypt Files pgp" },
    { on = [ "k", "g", "e" ], run = "shell '$HOME/.config/yazi/scripts/gpg_sign_encrypt_selected.sh \"$@\"' --block", desc = "üîê Encrypt Files pgp" },
    { on = [ "k", "g", "E" ], run = "shell '$HOME/.config/yazi/scripts/gpg_sign_encrypt_selected.sh -s \"$@\"' --block", desc = "üîê‚òëÔ∏è SignEncrypt Files pgp" },
    { on = [ "k", "g", "d" ], run = "shell '$HOME/.config/yazi/scripts/gpg_decrypt_selected.sh \"$@\"' --block", desc = "üîì DeCrypt Files pgp" },
    { on = [ "k", "g", "s" ], run = "shell '$HOME/.config/yazi/scripts/gpg_create_sig_selected.sh \"$@\"' --block", desc = "üñäÔ∏è Create sig for Files" },
    { on = [ "k", "g", "v" ], run = "shell '$HOME/.config/yazi/scripts/gpg_verify_selected.sh \"$@\"' --block", desc = "‚ùî Verify sig pgp" },
    { on = [ "k", "g", "l" ], run = 'shell --block -- gpg --list-packets "$1" | grep -A 1 "signature packet" ', desc = "üîç List packets üì¶" },
    { on = [ "k", "k" ], run = "shell 'code \"$@\"'", desc = "Open selected files in üíª vscode" },

    { on = [ "k", "m","a" ], run = "plugin mactag add", desc = "üè∑Ô∏è Tag selected files", for="macos" },
    { on = [ "k", "m","r" ], run = "plugin mactag remove", desc = "üè∑Ô∏è Untag selected files", for="macos" },

	{ on = [ "k", "s" ], run  = "shell '$HOME/.config/yazi/scripts/ncdu.sh \"$1\"' --block", desc = "üßÆ Show size dir" },
	{ on = [ "k","t" ],  run = "create", esc = "üî® Create a file (or dir/ )" },
	# { on = [ "k", "k" ], run = "plugin file-actions around", desc= "Perform actions on selected files"},
	# { on = [ "k", "x" ], run = "plugin my-plugin", desc= "TEST"},
    # { on = [ "k", "u" ], run = "shell 'tar -xzvf \"$@\" '", desc = "‚¨áÔ∏è Uncompress" },
    # { on = [ "k", "x" ], run = "lua hi()", desc = "yo" },
    # { on = [ "k", "x" ], run = "ls", desc = "yo" },
    # { on = [ "k", "x" ], run = "shell 'version; echo \"Press enter to continue\"; read -r in' --block", desc = "yo" },
	# { on = [ "k", "x" ], run = "shell 'nu -c \"ls; echo \"Press enter to continue\"; read -r in\"' --block", desc = "yo" },
	# { on = [ "k", "x" ], run = "shell 'nu -c \"echo \"Press enter to continue\"; read -r in\"' --block", desc = "yo" },
	# { on = [ "k", "x" ], run = "shell 'nu -c \"echo \\\"Press enter to continue\\\"; read -r in\"' --block", desc = "yo" },
    { on = [ "k", "x","x" ], run = "shell '$HOME/.config/yazi/scripts/sqlite_show_schema.sh \"$1\"' --block", desc = "üóÑÔ∏è show db schema" },
    { on = [ "k", "x","m" ], run = "shell '$HOME/.config/yazi/scripts/sqlite_show_meta.sh \"$1\"' --block", desc = "üóÑÔ∏è show db meta" },
    # { on = [ "k", "z" ], run = "plugin custom-shell bash --wait", desc = "custom-shell as default, waits for user" },
	# { on = [ "k", "e" ], run = "plugin eza-preview",  desc = "üå¥ Toggle tree/list dir preview" },
	# { on   = [ "k", "s" ], run  = "plugin what-size", desc = "üßÆ Calc size of selection or cwd" },
	{ on   = [ "k", "y" ], run  = "plugin tree-to-clipboard", desc = "tree to clipboard" },

	{ on = [ "!" ], run  = "shell 'echo \"Option1\nOption2\" | fzf --prompt=\"Choose an option: \"' --block", desc = "Open shell here"},
	{ on = "<Tab>", run = "spot", desc = "Spot hovered file" },

	# Linemode
	{ on = [ "l", "d" ], run = "linemode size_mtime_perm",        desc = "‚ú® Set default linemode (size + time + links + permissions)" },
	{ on = [ "l", "s" ], run = "linemode size_mtime",        desc = "üìÖ Set linemode to size + time" },
	{ on = [ "l", "p" ], run = "linemode permissions", desc = "üëÆ Set linemode to permissions" },
	{ on = [ "l", "m" ], run = "linemode mtime",       desc = "Set linemode to mtime" },
	{ on = [ "l", "o" ], run = "linemode owner",       desc = "üë§ Set linemode to owner" },
	{ on = [ "l", "n" ], run = "linemode none",        desc = "Set linemode to none" },

	# Copy
	{ on = [ "y", "p" ], run = "copy path",             desc = "Copy the file path" },
	{ on = [ "y", "d" ], run = "copy dirname",          desc = "Copy the directory path" },
	{ on = [ "y", "f" ], run = "copy filename",         desc = "Copy the filename" },
	{ on = [ "y", "F" ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

	# Filter
	{ on = "z", run = "filter --smart", desc = "Filter files" },

	# Ordering / ordering
	{ on = [ "o", "d" ], run = "sort natural --reverse=no",      desc = "‚ú® Order default" },
	{ on = [ "o", "m" ], run = "sort mtime --reverse=no",     desc = "Order by modified time" },
	{ on = [ "o", "M" ], run = "sort mtime --reverse",        desc = "Order by modified time (reverse)" },
	{ on = [ "o", "c" ], run = "sort btime --reverse=no",      desc = "Order by created time" },
	{ on = [ "o", "C" ], run = "sort btime  --reverse",        desc = "Order by created time (reverse)" },
	{ on = [ "o", "e" ], run = "sort extension --reverse=no",    desc = "Order by extension" },
	{ on = [ "o", "E" ], run = "sort extension --reverse",       desc = "Order by extension (reverse)" },
	{ on = [ "o", "a" ], run = "sort alphabetical --reverse=no", desc = "Order alphabetically" },
	{ on = [ "o", "A" ], run = "sort alphabetical --reverse",    desc = "Order alphabetically (reverse)" },
	{ on = [ "o", "n" ], run = "sort natural --reverse=no",      desc = "Order naturally" },
	{ on = [ "o", "N" ], run = "sort natural --reverse",         desc = "Order naturally (reverse)" },
	{ on = [ "o", "s" ], run = "sort size --reverse=no",         desc = "Order by size" },
	{ on = [ "o", "S" ], run = "sort size --reverse",            desc = "Order by size (reverse)" },

	# Tabs
	# { on = "t", run = "tab_create --current", desc = "Create a new tab with CWD" },
	{ on = ["t", "+"], run = "tab_create --current", desc = "Create a new tab with CWD" },
	{ on = ["t", "t"], run = "tab_create --current", desc = "Create a new tab with CWD" },
	{ on = "+", run = "tab_create --current", desc = "Create a new tab with CWD" },
	{ on = ["t", "-"], run = "tab_close", desc = "Close Tab" },
	{ on = "-", run = "tab_close", desc = "Close Tab" },

	{ on = ["t","1"], run = "tab_switch 0", desc = "Switch to the first tab" },
	# { on = "1", run = "tab_switch 0", desc = "Switch to the first tab" },
	{ on = ["t","2"], run = "tab_switch 1", desc = "Switch to the second tab" },
	# { on = "2", run = "tab_switch 1", desc = "Switch to the second tab" },
	{ on = ["t","3"], run = "tab_switch 2", desc = "Switch to the third tab" },
	# { on = "3", run = "tab_switch 2", desc = "Switch to the third tab" },
	# { on = "4", run = "tab_switch 3", desc = "Switch to the fourth tab" },
	# { on = "5", run = "tab_switch 4", desc = "Switch to the fifth tab" },
	# { on = "6", run = "tab_switch 5", desc = "Switch to the sixth tab" },
	# { on = "7", run = "tab_switch 6", desc = "Switch to the seventh tab" },
	# { on = "8", run = "tab_switch 7", desc = "Switch to the eighth tab" },
	# { on = "9", run = "tab_switch 8", desc = "Switch to the ninth tab" },

	# { on = "<A-Left>", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
	# { on = "<A-Right>", run = "tab_switch 1 --relative",  desc = "Switch to the next tab" },

	# { on = "{", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
	# { on = "}", run = "tab_swap 1",  desc = "Swap current tab with next tab" },


	# Tasks
	{ on = "w", run = "tasks_show", desc = "Show task manager" },

	# Goto
	{ on = [ "g", "b" ],       run = "cd ~/.Trash",   desc = "Go to the bin directory" },
	{ on = [ "g", "c" ],       run = "cd ~/.config",     desc = "Go to the config directory" },
	{ on = [ "g", "d" ],       run = "cd ~/Downloads",   desc = "Go to the downloads directory" },
	{ on = [ "g", "e" ],       run = "cd /etc",   desc = "Go to the etc directory" },
	{ on = [ "g", "f" ],       run = "cd -r %f",   desc = "follow symlink" },
	{ on = [ "g", "g" ],       run = "cd ~/repos",   desc = "Go to the git repo directory" },
	{ on = [ "g", "h" ],       run = "cd ~",             desc = "Go to the home directory" },
	{ on = [ "g", "i" ],       run = "cd ~/com~apple~CloudDocs",   desc = "-> icloud", for = "macos" },
	{ on = [ "g", "m" ],       run = "cd /mnt",   desc = "Go to the mnt directory" },
	{ on = [ "g", "r" ],       run = "cd /",   desc = "Go to the root directory" },
	{ on = [ "g", "t" ],       run = "cd ~/tmp",   desc = "Go to the (home) tmp directory" },
	{ on = [ "g", "T" ],       run = "cd ~/.Trash",   desc = "Go to the bin directory" },
	{ on = [ "g", "y" ],       run = "cd ~/.config/yazi",   desc = "-> yazi" },
	{ on = [ "g", "v" ],       run = "cd /Volumes",   desc = "-> Volumes", for = "macos" },
	{ on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Go to a directory interactively" },

	# enquire
    { on = [ "c", "d" ], run = "shell 'source $HOME/.config/yazi/scripts/fzf.sh && get_disk' --block", desc = "copy disk/partition üíæ" },
    { on = [ "c", "g" ], run = "shell 'source $HOME/.config/yazi/scripts/fzf.sh && get_gpg' --block", desc = "copy gpg key üîê" },
    {on = [ "c", "p" ], run = "shell 'source $HOME/.config/yazi/scripts/fzf.sh && get_ps' --block", desc = "copy process " },
    { on = [ "c", "s" ], run = "shell 'source $HOME/.config/yazi/scripts/fzf.sh && get_ssh_hash' --block", desc = "get ssh key üîê" },
    {on = [ "c", "r" ], run = "shell 'source $HOME/.config/yazi/scripts/fzf.sh && get_recent_files' --block", desc = "copy recent file ‚è±Ô∏è" },

	# Help
	{ on = "<F1>", run = "help", desc = "Open help" },
	{ on = "h", run = "help", desc = "Open help" },
]

[tasks]

keymap = [
	{ on = "<Esc>", run = "close", desc = "Close task manager" },
	{ on = "<C-[>", run = "close", desc = "Close task manager" },
	{ on = "<C-c>", run = "close", desc = "Close task manager" },
	{ on = "w",     run = "close", desc = "Close task manager" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Enter>", run = "inspect", desc = "Inspect the task" },
	{ on = "x",       run = "cancel",  desc = "Cancel the task" },

	{ on = "<F1>", run = "help", desc = "Open help" }
]

[select]

keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel selection" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel selection" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel selection" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the selection" },

	# { on = "k", run = "arrow -1", desc = "Move cursor up" },
	# { on = "j", run = "arrow 1",  desc = "Move cursor down" },

	# { on = "K", run = "arrow -5", desc = "Move cursor up 5 lines" },
	# { on = "J", run = "arrow 5",  desc = "Move cursor down 5 lines" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<S-Up>",   run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = "<S-Down>", run = "arrow 5",  desc = "Move cursor down 5 lines" },

	{ on = "<F1>", run = "help", desc = "Open help" }
]

[input]

keymap = [
	{ on = "<C-c>",   run = "close",          desc = "Cancel input" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the input" },
	{ on = "<Esc>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },
	{ on = "<C-[>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },

	# Mode
	{ on = "i", run = "insert",                              desc = "Enter insert mode" },
	{ on = "a", run = "insert --append",                     desc = "Enter append mode" },
	{ on = "I", run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
	{ on = "A", run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
	{ on = "v", run = "visual",                              desc = "Enter visual mode" },
	{ on = "V", run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all" },

	# Character-wise movement
	{ on = "h",       run = "move -1", desc = "Move back a character" },
	{ on = "l",       run = "move 1",  desc = "Move forward a character" },
	{ on = "<Left>",  run = "move -1", desc = "Move back a character" },
	{ on = "<Right>", run = "move 1",  desc = "Move forward a character" },
	{ on = "<C-b>",   run = "move -1", desc = "Move back a character" },
	{ on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = "b",     run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "w",     run = "forward",               desc = "Move forward to the start of the next word" },
	{ on = "e",     run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
	{ on = "<A-b>", run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "<A-f>", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = "0",      run = "move -999", desc = "Move to the BOL" },
	{ on = "$",      run = "move 999",  desc = "Move to the EOL" },
	{ on = "<C-a>",  run = "move -999", desc = "Move to the BOL" },
	{ on = "<C-e>",  run = "move 999",  desc = "Move to the EOL" },
	{ on = "<Home>", run = "move -999", desc = "Move to the BOL" },
	{ on = "<End>",  run = "move 999",  desc = "Move to the EOL" },

	# Delete
	{ on = "<Backspace>", run = "backspace",	        desc = "Delete the character before the cursor" },
	{ on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste
	{ on = "d", run = "delete --cut",                              desc = "Cut the selected characters" },
	{ on = "D", run = [ "delete --cut", "move 999" ],              desc = "Cut until the EOL" },
	{ on = "c", run = "delete --cut --insert",                     desc = "Cut the selected characters, and enter insert mode" },
	{ on = "C", run = [ "delete --cut --insert", "move 999" ],     desc = "Cut until the EOL, and enter insert mode" },
	{ on = "x", run = [ "delete --cut", "move 1 --in-operating" ], desc = "Cut the current character" },
	{ on = "y", run = "yank",           desc = "Copy the selected characters" },
	{ on = "p", run = "paste",          desc = "Paste the copied characters after the cursor" },
	{ on = "P", run = "paste --before", desc = "Paste the copied characters before the cursor" },

	# Undo/Redo
	{ on = "u",     run = "undo", desc = "Undo the last operation" },
	{ on = "<C-r>", run = "redo", desc = "Redo the last operation" },

	# Help
	{ on = "<F1>", run = "help", desc = "Open help" }
]

[completion]

keymap = [
	{ on = "<C-c>",   run = "close",                                      desc = "Cancel completion" },
	{ on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
	{ on = "<Enter>", run = [ "close --submit", "close_input --submit" ], desc = "Submit the completion and input" },

	{ on = "<A-k>", run = "arrow -1", desc = "Move cursor up" },
	{ on = "<A-j>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<C-p>", run = "arrow -1", desc = "Move cursor up" },
	{ on = "<C-n>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "~", run = "help", desc = "Open help" }
]

[help]

keymap = [
	{ on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "q",     run = "close",  desc = "Exit the process" },
	{ on = "<C-c>", run = "close",  desc = "Hide the help" },

	# Navigation
	# { on = "k", run = "arrow -1", desc = "Move cursor up" },
	# { on = "j", run = "arrow 1",  desc = "Move cursor down" },

	# { on = "K", run = "arrow -5", desc = "Move cursor up 5 lines" },
	# { on = "J", run = "arrow 5",  desc = "Move cursor down 5 lines" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<S-Up>",   run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = "<S-Down>", run = "arrow 5",  desc = "Move cursor down 5 lines" },

	# Filtering
	{ on = "/", run = "filter", desc = "Apply a filter for the help items" },
]

[[manager.prepend_keymap]]
on = [ "1" ]
run = "plugin relative-motions 1"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "2" ]
run = "plugin relative-motions 2"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "3" ]
run = "plugin relative-motions 3"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "4" ]
run = "plugin relative-motions 4"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "5" ]
run = "plugin relative-motions 5"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "6" ]
run = "plugin relative-motions 6"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "7" ]
run = "plugin relative-motions 7"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "8" ]
run = "plugin relative-motions 8"
desc = "Move in relative steps"

[[manager.prepend_keymap]]
on = [ "9" ]
run = "plugin relative-motions 9"
desc = "Move in relative steps"


	# { on = "<F2>", run = "rename --cursor=before_ext",  desc = "Rename selected file(s)" },
[[manager.prepend_keymap]]
on = [ "<F2>" ]
run = "rename --cursor=before_ext"
desc = "Rename selected file(s)"


[[manager.prepend_keymap]]
on  = "M"
run = "plugin mount"
